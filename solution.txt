a) когда делаем exec(), то программа заменятся совершенно новой, но в том же процессе, поэтому pid один и тот же.
    Однако структуры у программ могут быть разные, поэтому адресное пространство каждый раз новое.
с.iv) каждый раз перед рекурсивным вызовом foo(), мы кладем на стек функции начало стека + адрес возврата из функции
        + {0xaa, 0xbb, 0xcc, 0xdd} лежит не здесь, а в x8, поэтому потом он сразу загружает оттуда\
c.vii) куча растет в сторону увеличения адресов, поэтому если её забивать, то в адрсеном пространство в строке [heap]
        увидим увеличение адресов, пока сильно много не потратим и ОС завершит сама этот процесс
        Интересно, что перед нашими данными в заголовке, который заполняет malloc() лежит число
        Например, если мы запрашиваем блок памяти на 10 байт, а наша архитектура требует выравнивания на границу 8 байт,
        то в заголовок будет записано число 54 (64-10), что означает, что мы можем добавить 54 байта до начала
        выделенного блока, чтобы он начинался на границе 8 байт.
c.viii) NULL - ОС сама ищет свободное место, ANON - fd и offset игнор
c.ix) просто добавляется строка в /proc/pid/maps
c.x) получим SIGBUS
c.xi) перехватил
c.xiii) регион разбился на (начало, 4) и (6, конец)